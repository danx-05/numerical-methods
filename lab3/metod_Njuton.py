def f(x):
    """
    return: значение функции f(x) = x^2-3 в точке x
    """
    return x**3 - 2 * x + 2
def df(x):
    """
    :return: значение производной функции f(x) = x^2-3 в точке x
    """
    return 3 * x ** 2 - 2

def d2f(x):
    h = 10**(-8)
    return (f(x+h) - f(x)) / h

def solve(x_0,e):
    """
    Метод Ньютона
    :param x_0: точка отсчета
    :param e: точность приближения
    :return: x_1 для уравнения f(x) = 0 с точностью до e, k - количество итераций
    """
    k = 0
    x_1 = x_0 - f(x_0)/d2f(x_0)

    while abs(x_1 - x_0) > e and k < 1000: # Условие остановки цикла |x_1-x_0| < e
        k += 1
        x_0 = x_1
        x_1 = x_0 - f(x_0)/df(x_0) # итерационная формула метода Ньютона
    return x_1, k
# 1.7320508075688772
# 1.7320508075688774
print(solve(0,10**(-8)))